
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module ECEN3002_Project1(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// VGA //////////
	output		          		VGA_BLANK_N,
	output		          		VGA_CLK,
	output		          		VGA_SYNC_N,
	output		          		VGA_HS,
	output		          		VGA_VS,
	output	reg	     [7:0]		VGA_R,
	output	reg	     [7:0]		VGA_G,
	output	reg	     [7:0]		VGA_B
);

assign VGA_BLANK_N = 1'b1;
assign VGA_SYNC_N = 1'b0;

// PLL I/O
wire pixel_clk;
wire locked_wire;
wire [9:0] h_pos;
wire [9:0] v_pos;

// ROM I/O
wire [5:0] 	address;
wire [23:0] q;

// bring in PLL clock
video_pll VP0(.refclk(CLOCK2_50), .rst(1'b0), .outclk_0(pixel_clk), .locked(locked_wire));

// bring in ROM
ROM_IP RIP0(.address(address), .clock(pixel_clk), .q(q));

always @(*)
	begin
		if (h_pos < 640 && v_pos < 480)
			begin
				VGA_R = q[7:0];
				VGA_G = q[15:8];
				VGA_B = q[23:16];
			end
		else
			begin
				VGA_R = 8'b0;
				VGA_G = 8'b0;
				VGA_B = 8'b0;
			end
	end


assign VGA_CLK = pixel_clk;

// KEY[0] reset
assign reset_n = KEY[0] & locked_wire;

// Latch KEY[3] PG position toggle
reg ct_latch = 1'b0;
wire position_toggle_latch;
always @(negedge KEY[3])
	begin
		ct_latch <= ~ct_latch;
	end
assign position_toggle_latch = ct_latch;

VTC VTC0(.pixel_clk(pixel_clk), .reset_n(reset_n), .h_pos(h_pos), .v_pos(v_pos), .VGA_HS(VGA_HS), .VGA_VS(VGA_VS));
PG PG0(.KEY(KEY), .SW(SW), .pixel_clk(pixel_clk), .position_toggle_latch(position_toggle_latch), .h_pos(h_pos), .v_pos(v_pos), .q(q), .address(address));

endmodule
